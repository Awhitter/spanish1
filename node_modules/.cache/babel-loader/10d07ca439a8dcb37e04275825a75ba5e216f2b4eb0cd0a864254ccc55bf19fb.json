{"ast":null,"code":"var _jsxFileName = \"/Users/alecwhitters/Documents/Projects/spanish/spanish-exercises/src/components/AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport './AdminPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage() {\n  _s();\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newAnswer, setNewAnswer] = useState('');\n  const [exercises, setExercises] = useState([]);\n  const handleAddExercise = () => {\n    if (newQuestion.trim() === '' || newAnswer.trim() === '') {\n      alert('Please enter both question and answer.');\n      return;\n    }\n    const newExercise = {\n      pregunta: newQuestion,\n      respuesta: newAnswer\n    };\n    setExercises([...exercises, newExercise]);\n    setNewQuestion('');\n    setNewAnswer('');\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = evt => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary'\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: ['pregunta', 'respuesta']\n      });\n      setExercises([...exercises, ...data]);\n    };\n    reader.readAsBinaryString(file);\n  };\n  const handleSave = () => {\n    // In a real application, you would send this data to a backend server\n    // For now, we'll just log it to the console\n    console.log('Exercises to save:', exercises);\n    alert('Exercises saved successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Question\",\n      value: newQuestion,\n      onChange: e => setNewQuestion(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Answer\",\n      value: newAnswer,\n      onChange: e => setNewAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddExercise,\n      children: \"Add Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Excel File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Current Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [exercise.pregunta, \" - \", exercise.respuesta]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"save-button\",\n      children: \"Save All Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"WeqMDgSgaVshRS2YgkQi8R9a3bk=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","AdminPage","_s","newQuestion","setNewQuestion","newAnswer","setNewAnswer","exercises","setExercises","handleAddExercise","trim","alert","newExercise","pregunta","respuesta","handleFileUpload","e","file","target","files","reader","FileReader","onload","evt","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","readAsBinaryString","handleSave","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","onClick","accept","map","exercise","index","_c","$RefreshReg$"],"sources":["/Users/alecwhitters/Documents/Projects/spanish/spanish-exercises/src/components/AdminPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport './AdminPage.css';\n\nfunction AdminPage() {\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newAnswer, setNewAnswer] = useState('');\n  const [exercises, setExercises] = useState([]);\n\n  const handleAddExercise = () => {\n    if (newQuestion.trim() === '' || newAnswer.trim() === '') {\n      alert('Please enter both question and answer.');\n      return;\n    }\n    const newExercise = { pregunta: newQuestion, respuesta: newAnswer };\n    setExercises([...exercises, newExercise]);\n    setNewQuestion('');\n    setNewAnswer('');\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: 'binary' });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws, { header: ['pregunta', 'respuesta'] });\n      setExercises([...exercises, ...data]);\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const handleSave = () => {\n    // In a real application, you would send this data to a backend server\n    // For now, we'll just log it to the console\n    console.log('Exercises to save:', exercises);\n    alert('Exercises saved successfully!');\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <h2>Admin Page</h2>\n      <h3>Add New Exercise</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Question\"\n        value={newQuestion}\n        onChange={(e) => setNewQuestion(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Answer\"\n        value={newAnswer}\n        onChange={(e) => setNewAnswer(e.target.value)}\n      />\n      <button onClick={handleAddExercise}>Add Exercise</button>\n\n      <h3>Upload Excel File</h3>\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileUpload} />\n\n      <h3>Current Exercises</h3>\n      <ul>\n        {exercises.map((exercise, index) => (\n          <li key={index}>{exercise.pregunta} - {exercise.respuesta}</li>\n        ))}\n      </ul>\n\n      <button onClick={handleSave} className=\"save-button\">Save All Exercises</button>\n    </div>\n  );\n}\n\nexport default AdminPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}